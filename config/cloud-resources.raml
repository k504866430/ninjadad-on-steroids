#%RAML 0.8
title: Steroids Data
mediaType: application/json
baseUri: https://rest-api.appgyver.com/v1/

traits:
  - securedBySteroidsApiKey:
      headers:
        steroidsApiKey:
          type: string
          example: exampleapikey
          default: 66ef4811d96fdb4d61b8a89a0a8375f870f620c790c944ab6cd7be75fcf16320
        steroidsAppId:
          type: integer
          example: 1234
          default: 41523

schemas:
  - events: '{"$schema":"http://json-schema.org/schema","title":"event collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical event representation","properties":{"createdAt":{"type":"string"},"displayName":{"type":"string"},"location":{"type":"object"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - event: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical event representation","properties":{"createdAt":{"type":"string"},"displayName":{"type":"string"},"location":{"type":"object"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - invites: '{"$schema":"http://json-schema.org/schema","title":"invite collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical invite representation","properties":{"createdAt":{"type":"string"},"invitdeById":{"type":"object"},"inviteCode":{"type":"string"},"inviteeId":{"type":"object"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - invite: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical invite representation","properties":{"createdAt":{"type":"string"},"invitdeById":{"type":"object"},"inviteCode":{"type":"string"},"inviteeId":{"type":"object"},"objectId":{"type":"string"},"updatedAt":{"type":"string"}},"required":[]}'
  - users: '{"$schema":"http://json-schema.org/schema","title":"user collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical user representation","properties":{"createdAt":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}}}}'
  - user: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical user representation","properties":{"createdAt":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}'
  - kids: '{"$schema":"http://json-schema.org/schema","title":"kid collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical kid representation","properties":{"age":{"type":"integer"},"birthDate":{"type":"object"},"createdAt":{"type":"string"},"gender":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"parentId":{"type":"object"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - kid: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical kid representation","properties":{"age":{"type":"integer"},"birthDate":{"type":"object"},"createdAt":{"type":"string"},"gender":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"parentId":{"type":"object"},"updatedAt":{"type":"string"}},"required":[]}'
  - plans: '{"$schema":"http://json-schema.org/schema","title":"plan collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical plan representation","properties":{"createdAt":{"type":"string"},"eventId":{"type":"object"},"isOwner":{"type":"boolean"},"kidId":{"type":"object"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"userId":{"type":"object"}},"required":[]}}}}'
  - plan: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical plan representation","properties":{"createdAt":{"type":"string"},"eventId":{"type":"object"},"isOwner":{"type":"boolean"},"kidId":{"type":"object"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"userId":{"type":"object"}},"required":[]}'

resourceTypes:
  - dolan_db_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "objects"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g cars
      post:
        description: |
          {
            "action": "create",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName | !singularize>> # e.g. car

  - dolan_db_member:
      usage: This resourceType should be used for any built.io item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g. car
      put:
        description: |
          {
            "action": "update",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:
      

  - parse_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "results"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g cars
      post:
        description: |
          {
            "action": "create"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName | !singularize>> # e.g. car

  - parse_member:
      usage: This resourceType should be used for any parse item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>> # e.g. car
      put:
        description: |
          {
            "action": "update"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:


/event:
  description: |
    {
      "resourceName": "event",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/invite:
  description: |
    {
      "resourceName": "invite",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/user:
  description: |
    {
      "resourceName": "user",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/kid:
  description: |
    {
      "resourceName": "kid",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/plan:
  description: |
    {
      "resourceName": "plan",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member


